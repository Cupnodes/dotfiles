{
  "manifest": {
    "name": "express-urlrewrite",
    "description": "URL rewrite middleware for express",
    "repository": {
      "type": "git",
      "url": "git://github.com/kapouer/express-urlrewrite"
    },
    "scripts": {
      "test": "NODE_ENV=test nyc mocha"
    },
    "version": "1.4.0",
    "main": "index.js",
    "types": "index.d.ts",
    "keywords": [
      "express",
      "middleware",
      "rewrite",
      "redirect",
      "url"
    ],
    "files": [
      "index.*"
    ],
    "license": "MIT",
    "dependencies": {
      "debug": "*",
      "path-to-regexp": "^1.0.3"
    },
    "devDependencies": {
      "chai": "^4.2.0",
      "mocha": "^5.2.0",
      "nyc": "^13.1.0",
      "sinon": "^7.2.2",
      "sinon-chai": "^3.3.0"
    },
    "_registry": "npm",
    "_loc": "/home/aldair/.cache/yarn/v6/npm-express-urlrewrite-1.4.0-985ee022773bac7ed32126f1cf9ec8ee48e1290a-integrity/node_modules/express-urlrewrite/package.json",
    "readmeFilename": "README.md",
    "readme": "express-urlrewrite\n==================\n\nURL rewrite middleware for express.\n\n\n## Examples\n\nRewrite using a regular expression, rewriting `/i123` to `/items/123`.\n\n```js\napp.use(rewrite(/^\\/i(\\w+)/, '/items/$1'));\n```\n\nRewrite using route parameters, references may be named\nor numeric. For example rewrite `/foo..bar` to `/commits/foo/to/bar`:\n\n```js\napp.use(rewrite('/:src..:dst', '/commits/$1/to/$2'));\napp.use(rewrite('/:src..:dst', '/commits/:src/to/:dst'));\n```\n\nYou may also use the wildcard `*` to soak up several segments,\nfor example `/js/vendor/jquery.js` would become\n`/public/assets/js/vendor/jquery.js`:\n\n```js\napp.use(rewrite('/js/*', '/public/assets/js/$1'));\n```\n\nIn the above examples, the original query string (if any) is left untouched.\nThe regular expression is applied to the full url, so the query string\ncan be modified as well:\n\n```js\napp.use(rewrite('/file\\\\?param=:param', '/file/:param'))\n```\n\nThe query string delimiter (?) must be escaped for the regular expression\nto work.\n\n## New in version 1.1\n\n```js\napp.use(rewrite('/path', '/anotherpath?param=some'))\n```\n\nnow updates req.query, so `req.query.param == 'some'`.\n\n\n## New in version 1.2\n\nrewrite can be used as a route middleware as in\n```js\napp.get('/route/:var', rewrite('/rewritten/:var'));\n\napp.get('/rewritten/:var', someMw);\n```\n\nInstead of passing control to next middleware, it passes control to next route.\n\n\n## Debugging\n\nSet environment variable `DEBUG=express-urlrewrite`\n",
    "licenseText": "Copyright 2014 Jérémy Lal <kapouer@melix.org>\n\nThis is a port of koa-rewrite\nCopyright 2013 TJ Holowaychuk <tj@vision-media.ca>\n\nThe MIT license\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation files\n(the \"Software\"), to deal in the Software without restriction,\nincluding without limitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of the Software,\nand to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\nBE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\nACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/express-urlrewrite/-/express-urlrewrite-1.4.0.tgz#985ee022773bac7ed32126f1cf9ec8ee48e1290a",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/express-urlrewrite/-/express-urlrewrite-1.4.0.tgz",
    "hash": "985ee022773bac7ed32126f1cf9ec8ee48e1290a",
    "integrity": "sha512-PI5h8JuzoweS26vFizwQl6UTF25CAHSggNv0J25Dn/IKZscJHWZzPrI5z2Y2jgOzIaw2qh8l6+/jUcig23Z2SA==",
    "registry": "npm",
    "packageName": "express-urlrewrite",
    "cacheIntegrity": "sha512-PI5h8JuzoweS26vFizwQl6UTF25CAHSggNv0J25Dn/IKZscJHWZzPrI5z2Y2jgOzIaw2qh8l6+/jUcig23Z2SA== sha1-mF7gInc7rH7TISbxz57I7kjhKQo="
  },
  "registry": "npm",
  "hash": "985ee022773bac7ed32126f1cf9ec8ee48e1290a"
}